/* A DUMMY DATAMART FOR DIRECT MARKETING */
/* CONTAINS
	1. CAMPAIGN CONTACT HISTORY
	2. CAMPAIGN RESPONSE
	3. CUSTOMER DIMENSION
	4. SERVICE DIMENSION
	5. PRODUCT DIMENSION
	6. CAMPAIGN DIMENSION
*/

/* FACT TABLES */

/* DIMENSION TABLES */
/* CUSTOMER DIMENSION */
DROP TABLE IF EXISTS CUSTOMER;
CREATE TABLE CUSTOMER (
	ROW_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY
	,CUSTOMER_ID BIGINT
	, FIRST_NAME VARCHAR(100)
	, LAST_NAME VARCHAR(100)
	, DOB DATE
	, SUBURB VARCHAR(50)
	, CONTACT_NUMBER INTEGER
	, CUSTOMER_SEGMENTATION VARCHAR(50)
	, START_DATE DATE
	, END_DATE DATE
	,BATCH_ID BIGINT
);

/* SERVICE TABLE */
DROP TABLE IF EXISTS SERVICE;
CREATE TABLE SERVICE (
	ROW_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY
	,SERVICE_ID BIGINT
	, SERVICE_NUMBER VARCHAR(100)
	, SERVICE_STATUS VARCHAR(50) -- ACTIVE, DEACTIVE
	, PRODUCT_ID BIGINT
	, SERVICE_TYPE VARCHAR(10)	/* MOB, MBB, FIXED, TV ETC */
	, SALES_CHANNEL VARCHAR(20) 	/* STORE, ONLINE */
	, CUSTOMER_ID BIGINT	/* CUSTOMER ID */
	, START_DATE DATE -- SERVICE ACTIVATION DATE
	, END_DATE DATE
	,BATCH_ID BIGINT
);

DROP TABLE IF EXISTS PRODUCT;
CREATE TABLE PRODUCT (
	ROW_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY
	,PRODUCT_ID BIGINT
	, PRODUCT_NAME VARCHAR(100)
	, PRODUCT_TYPE VARCHAR(100)
	, PRODUCT_PRICE DECIMAL(10,2)
	, START_DATE DATE
	, END_DATE DATE
	,BATCH_ID BIGINT
);

/* CAMPAIGN REFERENCE */
DROP TABLE IF EXISTS CAMPAIGN;
CREATE TABLE CAMPAIGN (
	ROW_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY
	,CAMPAIGN_ID BIGINT
	, CAMPAIGN_NAME VARCHAR(100)
	, CAMPAIGN_DESCRIPTION VARCHAR(255)
	, CAMPAIGN_TYPE VARCHAR(50) -- UPSELL, XSELL, RETENTION ETC.
	, CAMPAIGN_DATE DATE
	, CHANNEL VARCHAR(50) -- TM/SMS/DM/EDM
	, PRODUCT_ID BIGINT
	, START_DATE DATE
	, END_DATE DATE
	,BATCH_ID BIGINT
);

/* --- CREATE TRACKING TABLE ---- */
DROP TABLE IF EXISTS DELTA_UPDATE_HIST;
CREATE TABLE DELTA_UPDATE_HIST (
	R_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	ROW_ID BIGINT
);

DROP PROCEDURE IF EXISTS HADOOP_HACKTHON_DATA;

DELIMITER ;;
CREATE PROCEDURE HADOOP_HACKTHON_DATA()

BEGIN

	/* --- GLOBAL VARIABLES TO CONTROL VOLUME OF THE DATA -----------*/
	/* */
	/* ONLY CHANGE THE NUMBERS HERE TO INCREASE OR DECREASE THE VOLUME OF DATA */
	/* --------------------------------- */

	SET @TOTAL_PRODUCTS = 100;
	SET @TOTAL_CUST_PER_PROD = 10000;
	SET @CAMP_CUST_PER_PROD = 0.6 * @TOTAL_CUST_PER_PROD;
	SET @RANDOM_CUST_PER_PROD = @TOTAL_CUST_PER_PROD - @CAMP_CUST_PER_PROD;
	SET @SVC_PER_CUST = 5;
	/*SET @RECORD_START_DATE = DATE_FORMAT(FROM_UNIXTIME(UNIX_TIMESTAMP(NOW()) - FLOOR(0 + (RAND() * 63072000))), '%Y-%m-%d');*/
	SET @RECORD_START_DATE = ADDDATE(DATE(NOW()), -1 * FLOOR(RAND() * 100));
	/* SET @RECORD_END_DATE = ADDDATE(@RECORD_START_DATE, 730);  ADD TWO YEARS */
	SET @RECORD_END_DATE = '2999-12-31';
	/* DECLARE PROD_COUNTS INT DEFAULT 1; */
	SET @PROD_COUNTS = 1;

	WHILE @PROD_COUNTS <= @TOTAL_PRODUCTS DO

		/*-- PRODUCT RECORD ----------------------------*/
		SET @PROD_ID = FLOOR(100000000 + RAND() * 999999999999999);
		SET @PROD_NM = CONCAT('PRODUCT ',FLOOR(RAND()*100000));
		SET @PROD_TYPE = ELT(1 + FLOOR(RAND()*6), 'TELEPHONE','BROADBAND','MOBILE','TV','BUNDLE','OTHER');
		SET @PROD_PRICE = ROUND(RAND() * 200, 2);
		SET @PROD_START_DATE = @RECORD_START_DATE;
		SET @PROD_END_DATE = @RECORD_END_DATE;

		INSERT INTO PRODUCT (PRODUCT_ID, PRODUCT_NAME, PRODUCT_TYPE, PRODUCT_PRICE, START_DATE, END_DATE,BATCH_ID)
		VALUES (@PROD_ID, @PROD_NM, @PROD_TYPE, @PROD_PRICE, @PROD_START_DATE, @PROD_END_DATE, 1);

		/*-- CAMPAIGN RECORDS -------------------------------- */
		SET @CAMPAIGN_PROD_ID = @PROD_ID;
		SET @CAMPAIGN_ID = FLOOR(100000000 + RAND() * 999999999999999);
		SET @CAMPAIGN_NM = CONCAT('CAMPAIGN ',FLOOR(RAND()*100000));
		SET @CAMPAIGN_DESC = SUBSTRING(MD5(RAND()) FROM 1 FOR 30);
		SET @CAMPAIGN_TYPE = ELT(1 + FLOOR(RAND()*6), 'UPSELL','XSELL','RETENTION','MANDATORY','MESSAGE','OTHER');
		SET @START_DATE = @RECORD_START_DATE;
		SET @END_DATE = @RECORD_END_DATE;
		SET @CAMPAIGN_CHANNEL = ELT(1 + FLOOR(RAND()*6), 'TM','DM','SMS','EDM','INSERT','OTHER');
		SET @CAMPAIGN_DATE = DATE_FORMAT(FROM_UNIXTIME(UNIX_TIMESTAMP(NOW()) - FLOOR(0 + (RAND() * 63072000))), '%Y-%m-%d');

		INSERT INTO CAMPAIGN (CAMPAIGN_ID, CAMPAIGN_NAME, CAMPAIGN_DESCRIPTION, CAMPAIGN_TYPE,START_DATE,CHANNEL,PRODUCT_ID, END_DATE, CAMPAIGN_DATE,BATCH_ID)
		VALUES (@CAMPAIGN_ID, @CAMPAIGN_NM, @CAMPAIGN_DESC, @CAMPAIGN_TYPE, @START_DATE, @CAMPAIGN_CHANNEL, @CAMPAIGN_PROD_ID, @END_DATE, @CAMPAIGN_DATE,1);

		/*-- CUSTOMER RECORDS -------------------------------- */
		SET @CUST_COUNTS = 1;

		/* CAMPAIGN RELATED CUSTOMERS */
		WHILE @CUST_COUNTS <=  @CAMP_CUST_PER_PROD DO

			SET @CUST_ID = FLOOR(100000000 + RAND() * 999999999999999);
			SET @CUST_FIRST_NM = CONCAT('FN ',FLOOR(RAND()*1000000));
			SET @CUST_LAST_NM = CONCAT('LN ',FLOOR(RAND()*100000));
			SET @CUST_DOB = ADDDATE('1960-01-01',(RAND() * 15000));
			IF YEAR(@CUST_DOB) >= 1990 THEN
				SET @CUST_DOB = ADDDATE(@CUST_DOB, -3600);
			END IF;
			SET @CUST_SUBURB = ELT(1 + FLOOR(RAND()*6), 'SYDNEY','ULTIMO','CHATSWOOD','NORTH SYDNEY','DEE WHY','BONDI JUNCTION');
			SET @CUST_CONTACT_NO = FLOOR(RAND() * 10000000);
			SET @CUST_SEG = ELT(1 + FLOOR(RAND()*3), 'CONSUMER','SMB','FLEET');
			SET @CUST_START_DATE = @RECORD_START_DATE;
			SET @CUST_END_DATE = @RECORD_END_DATE;

			INSERT INTO CUSTOMER (CUSTOMER_ID, FIRST_NAME, LAST_NAME, DOB, SUBURB, CONTACT_NUMBER, CUSTOMER_SEGMENTATION, START_DATE, END_DATE,BATCH_ID)
			VALUES (@CUST_ID, @CUST_FIRST_NM, @CUST_LAST_NM, @CUST_DOB, @CUST_SUBURB, @CUST_CONTACT_NO, @CUST_SEG, @CUST_START_DATE, @CUST_END_DATE,1);


			/* SERVICE RECORDS */
			SET @SVC_COUNTS = 1;

			WHILE @SVC_COUNTS <= @SVC_PER_CUST DO
				SET @SVC_ID = FLOOR(100000000 + RAND() * 999999999999999);
				SET @SVC_NUMBER = FLOOR(RAND() * 10000000);
				SET @SVC_STATUS = ELT(1 + FLOOR(RAND()*4), 'ACTIVE','INACTIVE','CANCELLED','SUSPENDED');
				SET @SVC_PROD_ID = @PROD_ID;
				SET @SVC_TYPE = ELT(1 + FLOOR(RAND()*4), 'MOB','MBB','FIXED','OTHER');
				SET @SALES_CHANNEL = ELT(1 + FLOOR(RAND()*4), 'TM','STORE','ONLINE','OTHER');
				SET @SVC_START_DATE = @RECORD_START_DATE;
				SET @SVC_END_DATE = @RECORD_END_DATE;
				SET @SVC_CUST_ID = @CUST_ID;

				INSERT INTO SERVICE (SERVICE_ID, SERVICE_NUMBER, SERVICE_STATUS, PRODUCT_ID, SERVICE_TYPE, SALES_CHANNEL, START_DATE, END_DATE, CUSTOMER_ID,BATCH_ID)
				VALUES (@SVC_ID, @SVC_NUMBER, @SVC_STATUS, @SVC_PROD_ID, @SVC_TYPE, @SALES_CHANNEL, @SVC_START_DATE, @SVC_END_DATE, @SVC_CUST_ID,1);

				SET @SVC_COUNTS = @SVC_COUNTS + 1;

			END WHILE;

			SET @CUST_COUNTS = @CUST_COUNTS + 1;

		END WHILE;

		/*----- RANDOM CUSTOMER RECORDS ---------------------------------*/
		SET @CUST_COUNTS = 1;

		/* CAMPAIGN RELATED CUSTOMERS */
		WHILE @CUST_COUNTS <=  @RANDOM_CUST_PER_PROD DO

			SET @CUST_ID = FLOOR(100000000 + RAND() * 999999999999999);
			SET @CUST_FIRST_NM = CONCAT('FN ',FLOOR(RAND()*1000000));
			SET @CUST_LAST_NM = CONCAT('LN ',FLOOR(RAND()*100000));
			SET @CUST_DOB = ADDDATE('1960-01-01',(RAND() * 15000));
			IF YEAR(@CUST_DOB) >= 1990 THEN
				SET @CUST_DOB = ADDDATE(@CUST_DOB, -3600);
			END IF;
			SET @CUST_SUBURB = ELT(1 + FLOOR(RAND()*6), 'SYDNEY','ULTIMO','CHATSWOOD','NORTH SYDNEY','DEE WHY','BONDI JUNCTION');
			SET @CUST_CONTACT_NO = FLOOR(RAND() * 10000000);
			SET @CUST_SEG = ELT(1 + FLOOR(RAND()*3), 'CONSUMER','SMB','FLEET');
			SET @CUST_START_DATE = @RECORD_START_DATE;
			SET @CUST_END_DATE = @RECORD_END_DATE;

			INSERT INTO CUSTOMER (CUSTOMER_ID, FIRST_NAME, LAST_NAME, DOB, SUBURB, CONTACT_NUMBER, CUSTOMER_SEGMENTATION, START_DATE, END_DATE,BATCH_ID)
			VALUES (@CUST_ID, @CUST_FIRST_NM, @CUST_LAST_NM, @CUST_DOB, @CUST_SUBURB, @CUST_CONTACT_NO, @CUST_SEG, @CUST_START_DATE, @CUST_END_DATE,1);


			/* SERVICE RECORDS */
			SET @SVC_COUNTS = 1;

			WHILE @SVC_COUNTS <= @SVC_PER_CUST DO
				SET @SVC_ID = FLOOR(100000000 + RAND() * 999999999999999);
				SET @SVC_NUMBER = FLOOR(RAND() * 10000000);
				SET @SVC_STATUS = ELT(1 + FLOOR(RAND()*4), 'ACTIVE','INACTIVE','CANCELLED','SUSPENDED');
				SET @SVC_PROD_ID = @PROD_ID;
				SET @SVC_TYPE = ELT(1 + FLOOR(RAND()*4), 'MOB','MBB','FIXED','OTHER');
				SET @SALES_CHANNEL = ELT(1 + FLOOR(RAND()*4), 'TM','STORE','ONLINE','OTHER');
				SET @SVC_START_DATE = @RECORD_START_DATE;
				SET @SVC_END_DATE = @RECORD_END_DATE;
				SET @SVC_CUST_ID = @CUST_ID;

				INSERT INTO SERVICE (SERVICE_ID, SERVICE_NUMBER, SERVICE_STATUS, PRODUCT_ID, SERVICE_TYPE, SALES_CHANNEL, START_DATE, END_DATE, CUSTOMER_ID,BATCH_ID)
				VALUES (@SVC_ID, @SVC_NUMBER, @SVC_STATUS, @SVC_PROD_ID, @SVC_TYPE, @SALES_CHANNEL, @SVC_START_DATE, @SVC_END_DATE, @SVC_CUST_ID,1);


				SET @SVC_COUNTS = @SVC_COUNTS + 1;

			END WHILE;

			SET @CUST_COUNTS = @CUST_COUNTS + 1;

		END WHILE;

		SET @PROD_COUNTS = @PROD_COUNTS + 1;

	END WHILE;
END;;

/* ---- CREATE RECORDS NOW ----- */
CALL HADOOP_HACKTHON_DATA();
