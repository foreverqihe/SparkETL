/* A DUMMY DATAMART FOR DIRECT MARKETING */
/* CONTAINS
	1. CAMPAIGN CONTACT HISTORY
	2. CAMPAIGN RESPONSE
	3. CUSTOMER DIMENSION
	4. SERVICE DIMENSION
	5. PRODUCT DIMENSION
	6. CAMPAIGN DIMENSION
*/

DROP PROCEDURE IF EXISTS HADOOP_HACKTHON_DELTA;

DELIMITER ;;
CREATE PROCEDURE HADOOP_HACKTHON_DELTA()

BEGIN

	/* ----------- 1, UPDATE EXISTING RECORDS TO CREATE DELTA --------------- */
	SET @TOTAL_DELTA_RATIO = 0.2; /* IF IT'S 0.1 THAT MEANS 10% OF EXISTING RECORDS WILL BE UPDATED */
	SELECT @BATCH_ID := MAX(BATCH_ID) + 1 FROM PRODUCT WHERE END_DATE > START_DATE;
	SELECT @PROD_NUM := COUNT(*) FROM PRODUCT WHERE END_DATE > START_DATE;
	SELECT @CUST_NUM := COUNT(*) FROM CUSTOMER WHERE END_DATE > START_DATE;
	SELECT @CAMP_NUM := COUNT(*) FROM CAMPAIGN WHERE END_DATE > START_DATE;
	SELECT @SVC_NUM := COUNT(*) FROM SERVICE WHERE END_DATE > START_DATE;
	SET @DELTA_PROD_COUNTS = FLOOR(@TOTAL_DELTA_RATIO * @PROD_NUM);
	SET @DELTA_CUST_COUNTS = FLOOR(@TOTAL_DELTA_RATIO * @CUST_NUM);
	SET @DELTA_CAMP_COUNTS = FLOOR(@TOTAL_DELTA_RATIO * @CAMP_NUM);
	SET @DELTA_SVC_COUNTS = FLOOR(@TOTAL_DELTA_RATIO * @SVC_NUM);

	SET @RECORD_START_DATE = ADDDATE(DATE(NOW()), -1 * FLOOR(RAND() * 100));
	SET @RECORD_END_DATE = '2999-12-31';

	START TRANSACTION;
	/* --- UPDATE PRODUCT TABLE --- */
	SET @PROD_IND = 1;
	WHILE @PROD_IND <= @DELTA_PROD_COUNTS DO
		SELECT @PROD_ID := PRODUCT_ID, @ROW_ID := ROW_ID FROM PRODUCT WHERE END_DATE > START_DATE AND ROW_ID NOT IN
		(SELECT ROW_ID FROM DELTA_UPDATE_HIST) LIMIT 1;

		SET @PROD_NM = CONCAT('PRODUCT ',FLOOR(RAND()*100000));
		SET @PROD_TYPE = ELT(1 + FLOOR(RAND()*6), 'TELEPHONE','BROADBAND','MOBILE','TV','BUNDLE','OTHER');
		SET @PROD_PRICE = ROUND(RAND() * 200, 2);
		SET @PROD_START_DATE = @RECORD_START_DATE;
		SET @PROD_END_DATE = @RECORD_END_DATE;

		UPDATE PRODUCT SET END_DATE = START_DATE WHERE PRODUCT_ID = @PROD_ID AND ROW_ID = @ROW_ID;

		INSERT INTO DELTA_UPDATE_HIST (ROW_ID) VALUES (@ROW_ID);

		INSERT INTO PRODUCT (PRODUCT_ID, PRODUCT_NAME, PRODUCT_TYPE, PRODUCT_PRICE, START_DATE, END_DATE, BATCH_ID)
		VALUES (@PROD_ID, @PROD_NM, @PROD_TYPE, @PROD_PRICE, @PROD_START_DATE, @PROD_END_DATE, @BATCH_ID);

		SET @PROD_IND = @PROD_IND + 1;
	END WHILE;
	TRUNCATE DELTA_UPDATE_HIST;
	COMMIT;

	START TRANSACTION;
	/* --- UPDATE CAMPAIGN TABLE --- */
	SET @CAMPAIGN_IND = 1;
	WHILE @CAMPAIGN_IND <= @DELTA_CAMP_COUNTS DO
		SELECT @CAMPAIGN_ID := CAMPAIGN_ID, @CAMPAIGN_PROD_ID := PRODUCT_ID, @ROW_ID := ROW_ID FROM CAMPAIGN WHERE END_DATE > START_DATE AND ROW_ID NOT IN
		(SELECT ROW_ID FROM DELTA_UPDATE_HIST) LIMIT 1;

		SET @CAMPAIGN_NM = CONCAT('CAMPAIGN ',FLOOR(RAND()*100000));
		SET @CAMPAIGN_DESC = SUBSTRING(MD5(RAND()) FROM 1 FOR 30);
		SET @CAMPAIGN_TYPE = ELT(1 + FLOOR(RAND()*6), 'UPSELL','XSELL','RETENTION','MANDATORY','MESSAGE','OTHER');
		SET @START_DATE = @RECORD_START_DATE;
		SET @END_DATE = @RECORD_END_DATE;
		SET @CAMPAIGN_CHANNEL = ELT(1 + FLOOR(RAND()*6), 'TM','DM','SMS','EDM','INSERT','OTHER');
		SET @CAMPAIGN_DATE = DATE_FORMAT(FROM_UNIXTIME(UNIX_TIMESTAMP(NOW()) - FLOOR(0 + (RAND() * 63072000))), '%Y-%m-%d');

		UPDATE CAMPAIGN SET END_DATE = START_DATE WHERE CAMPAIGN_ID = @CAMPAIGN_ID AND ROW_ID = @ROW_ID;

		INSERT INTO DELTA_UPDATE_HIST (ROW_ID) VALUES (@ROW_ID);

		INSERT INTO CAMPAIGN (CAMPAIGN_ID, CAMPAIGN_NAME, CAMPAIGN_DESCRIPTION, CAMPAIGN_TYPE,START_DATE,CHANNEL,PRODUCT_ID, END_DATE, CAMPAIGN_DATE, BATCH_ID)
		VALUES (@CAMPAIGN_ID, @CAMPAIGN_NM, @CAMPAIGN_DESC, @CAMPAIGN_TYPE, @START_DATE, @CAMPAIGN_CHANNEL, @CAMPAIGN_PROD_ID, @END_DATE, @CAMPAIGN_DATE, @BATCH_ID);

		SET @CAMPAIGN_IND = @CAMPAIGN_IND + 1;
	END WHILE;
	TRUNCATE DELTA_UPDATE_HIST;
	COMMIT;

	START TRANSACTION;
	/* --- UPDATE CUSTOMER TABLE --- */
	SET @CUSTOMER_IND = 1;
	WHILE @CUSTOMER_IND <= @DELTA_CUST_COUNTS DO
		SELECT @CUSTOMER_ID := CUSTOMER_ID, @ROW_ID := ROW_ID FROM CUSTOMER WHERE END_DATE > START_DATE AND ROW_ID NOT IN
		(SELECT ROW_ID FROM DELTA_UPDATE_HIST) ORDER BY ROW_ID LIMIT 1;

		SET @CUST_FIRST_NM = CONCAT('FN ',FLOOR(RAND()*1000000));
		SET @CUST_LAST_NM = CONCAT('LN ',FLOOR(RAND()*100000));
		SET @CUST_DOB = ADDDATE('1960-01-01',(RAND() * 15000));
		IF YEAR(@CUST_DOB) >= 1990 THEN
			SET @CUST_DOB = ADDDATE(@CUST_DOB, -3600);
		END IF;
		SET @CUST_SUBURB = ELT(1 + FLOOR(RAND()*6), 'SYDNEY','ULTIMO','CHATSWOOD','NORTH SYDNEY','DEE WHY','BONDI JUNCTION');
		SET @CUST_CONTACT_NO = FLOOR(RAND() * 10000000);
		SET @CUST_SEG = ELT(1 + FLOOR(RAND()*3), 'CONSUMER','SMB','FLEET');
		SET @CUST_START_DATE = @RECORD_START_DATE;
		SET @CUST_END_DATE = @RECORD_END_DATE;

		UPDATE CUSTOMER SET END_DATE = START_DATE WHERE CUSTOMER_ID = @CUSTOMER_ID AND ROW_ID = @ROW_ID;

		INSERT INTO DELTA_UPDATE_HIST (ROW_ID) VALUES (@ROW_ID);

		INSERT INTO CUSTOMER (CUSTOMER_ID, FIRST_NAME, LAST_NAME, DOB, SUBURB, CONTACT_NUMBER, CUSTOMER_SEGMENTATION, START_DATE, END_DATE, BATCH_ID)
		VALUES (@CUSTOMER_ID, @CUST_FIRST_NM, @CUST_LAST_NM, @CUST_DOB, @CUST_SUBURB, @CUST_CONTACT_NO, @CUST_SEG, @CUST_START_DATE, @CUST_END_DATE, @BATCH_ID);

		SET @CUSTOMER_IND = @CUSTOMER_IND + 1;

	END WHILE;
	TRUNCATE DELTA_UPDATE_HIST;
	COMMIT;

	START TRANSACTION;
	/* --- UPDATE SERVICE TABLE --- */
	SET @SERVICE_IND = 1;
	WHILE @SERVICE_IND <= @DELTA_SVC_COUNTS DO
		SELECT @SVC_ID := SERVICE_ID, @SVC_CUST_ID = CUSTOMER_ID, @SVC_PROD_ID = PRODUCT_ID, @ROW_ID := ROW_ID FROM SERVICE WHERE END_DATE > START_DATE AND ROW_ID NOT IN
		(SELECT ROW_ID FROM DELTA_UPDATE_HIST) LIMIT 1;

		SET @SVC_NUMBER = FLOOR(RAND() * 10000000);
		SET @SVC_STATUS = ELT(1 + FLOOR(RAND()*4), 'ACTIVE','INACTIVE','CANCELLED','SUSPENDED');
		SET @SVC_TYPE = ELT(1 + FLOOR(RAND()*4), 'MOB','MBB','FIXED','OTHER');
		SET @SALES_CHANNEL = ELT(1 + FLOOR(RAND()*4), 'TM','STORE','ONLINE','OTHER');
		SET @SVC_START_DATE = @RECORD_START_DATE;
		SET @SVC_END_DATE = @RECORD_END_DATE;

		UPDATE SERVICE SET END_DATE = START_DATE WHERE SERVICE_ID = @SVC_ID AND CUSTOMER_ID = @SVC_CUST_ID AND ROW_ID = @ROW_ID;

		INSERT INTO DELTA_UPDATE_HIST (ROW_ID) VALUES (@ROW_ID);

		INSERT INTO SERVICE (SERVICE_ID, SERVICE_NUMBER, SERVICE_STATUS, PRODUCT_ID, SERVICE_TYPE, SALES_CHANNEL, START_DATE, END_DATE, CUSTOMER_ID, BATCH_ID)
		VALUES (@SVC_ID, @SVC_NUMBER, @SVC_STATUS, @SVC_PROD_ID, @SVC_TYPE, @SALES_CHANNEL, @SVC_START_DATE, @SVC_END_DATE, @SVC_CUST_ID, @BATCH_ID);

		SET @SERVICE_IND = @SERVICE_IND + 1;

	END WHILE;
	TRUNCATE DELTA_UPDATE_HIST;
	COMMIT;

END;;

/* ---- CREATE RECORDS NOW ----- */
CALL HADOOP_HACKTHON_DELTA();
